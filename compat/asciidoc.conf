# This file is an AsciiDoc configuration file that makes
# AsciiDoc conform with Asciidoctor's fixes and customizations.
#
# Place this file in the same directory as your AsciiDoc document and the
# AsciiDoc processor (asciidoc) will automatically use it.

[miscellaneous]
newline=\n

[attributes]
# make html5 the default html backend
backend-alias-html=html5
linkcss=
apostrophe='
asterisk=*
caret=^
backtick=`
# plus introduced in AsciiDoc 8.6.9
plus=&#43;
space=" "
tilde=~

# enables fenced code blocks
# FIXME I haven't sorted out yet how to do syntax highlighting
[blockdef-fenced-code]
delimiter=^```\w*$
template::[blockdef-listing]

# enables blockquotes to be defined using two double quotes
[blockdef-air-quote]
delimiter=^""$
template::[blockdef-quote]

# markdown-style blockquote (paragraph only)
# FIXME does not strip leading > on subsequent lines
[paradef-markdown-quote]
delimiter=(?s)>\s*(?P<text>\S.*)
style=quote
quote-style=template="quoteparagraph",posattrs=("style","attribution","citetitle")

# fix regex for callout list to require number; also makes markdown-style blockquote work
[listdef-callout]
posattrs=style
delimiter=^<?(?P<index>\d+>) +(?P<text>.+)$
type=callout
tags=callout
style=arabic

# enables literal block to be used as code block
[blockdef-literal]
template::[source-filter-style]

[tabledef-csv]
template::[tabledef-default]
delimiter=^,={3,}$
format=csv

[tabledef-dsv]
template::[tabledef-default]
delimiter=^:={3,}$
format=dsv

ifdef::basebackend-html[]

[literal-inlinemacro]
<code>{passtext}</code>

[tags]
monospaced=<code{1? class="{1}"}>|</code>

[monospacedwords]
<code>{words}</code>

[tabletags-monospaced]
paragraph=<p class="tableblock"><code>|</code></p>

[sect0]
<h1{id? id="{id}"} class="sect0">{title}</h1>
|

# support for document title in embedded documents
ifeval::[not config.header_footer]
[preamble]
<h1>{title={doctitle}}</h1>{set:title-rendered:}
<div id="preamble">
<div class="sectionbody">
|
</div>
{toc,toc2#}{toc-placement$preamble:}{template:toc}
</div>

[sect1]
{title-rendered%}<h1>{doctitle}</h1>
<div class="sect1{style? {style}}{role? {role}}">
<h2{id? id="{id}"}>{numbered?{sectnum} }{title}</h2>
<div class="sectionbody">
|
</div>
</div>
endif::[]

# override to add the admonition name to the class attribute of the outer element
[admonitionblock]
<div class="admonitionblock {name}{role? {role}}{unbreakable-option? unbreakable}"{id? id="{id}"}>
<table><tr>
<td class="icon">
{data-uri%}{icons#}<img src="{icon={iconsdir}/{name}.png}" alt="{caption}">
{data-uri#}{icons#}<img alt="{caption}" src="data:image/png;base64,
{data-uri#}{icons#}{sys:"{python}" -u -c "import base64,sys; base64.encode(sys.stdin,sys.stdout)" < "{eval:os.path.join(r"{indir={outdir}}",r"{icon={iconsdir}/{name}.png}")}"}">
{icons%}<div class="title">{caption}</div>
</td>
<td class="content">
<div class="title">{title}</div>
|
</td>
</tr></table>
</div>

# a common template for emitting the attribute for a quote or verse block
# don't output attribution div if attribution or citetitle are both empty
[attribution]
{attribution,citetitle#}<div class="attribution">
<cite>{citetitle}</cite>{attribution?<br>}
&#8212; {attribution}
{attribution,citetitle#}</div>

# override to use blockquote element for content and cite element for cite title
[quoteblock]
<div class="quoteblock{role? {role}}{unbreakable-option? unbreakable}"{id? id="{id}"}>
<div class="title">{title}</div>
<blockquote>
|
</blockquote>
template::[attribution]
</div>

# override to use cite element for cite title
[verseblock]
<div class="verseblock{role? {role}}{unbreakable-option? unbreakable}"{id? id="{id}"}>
<div class="title">{title}</div>
<pre class="content">
|
</pre>
template::[attribution]
</div>

# override tabletags to support cellbgcolor
[tabletags-default]
headdata=<th class="tableblock halign-{halign=left} valign-{valign=top}"{colspan@1:: colspan="{colspan}"}{rowspan@1:: rowspan="{rowspan}"}{cellbgcolor? style="background-color:{cellbgcolor};"}>|</th>
bodydata=<td class="tableblock halign-{halign=left} valign-{valign=top}"{colspan@1:: colspan="{colspan}"}{rowspan@1:: rowspan="{rowspan}"}{cellbgcolor? style="background-color:{cellbgcolor};"}>|</td>

[toc]
<div id="toc">
<div id="toctitle">{toc-title}</div>
ifdef::toc2[]
<script type="text/javascript">
document.body.className += ' toc2';
document.getElementById('toc').className = 'toc2';
</script>
endif::toc2[]
<noscript><p><b>JavaScript must be enabled in your browser to display the table of contents.</b></p></noscript>
</div>

endif::basebackend-html[]

# Override docinfo to support subtitle
ifdef::basebackend-docbook[]

# override tabletags to support cellbgcolor
[tabletags-default]
headdata=<entry align="{halign}" valign="{valign}"{colspan@1:: namest="col_{colstart}" nameend="col_{colend}"}{morerows@0:: morerows="{morerows}"}>{cellbgcolor?<?dbfo bgcolor="{cellbgcolor}"?>}|</entry>
bodydata=<entry align="{halign}" valign="{valign}"{colspan@1:: namest="col_{colstart}" nameend="col_{colend}"}{morerows@0:: morerows="{morerows}"}>{cellbgcolor?<?dbfo bgcolor="{cellbgcolor}"?>}|</entry>

[docinfo]
ifndef::notitle[]
{set2:subtitle_offset:{eval:'{doctitle}'.rfind(': ')}}
{eval:{subtitle_offset} != -1}<title>{eval:'{doctitle}'[0:{subtitle_offset}]}</title>
{eval:{subtitle_offset} != -1}<subtitle>{eval:'{doctitle}'[{subtitle_offset} + 2:]}</subtitle>
{eval:{subtitle_offset} < 0}<title>{doctitle}</title>
endif::notitle[]
<date>{revdate}</date>
# To ensure valid articleinfo/bookinfo when there is no AsciiDoc header.
{doctitle%}{revdate%}<date>{docdate}</date>
{authored#}<author>
<firstname>{firstname}</firstname>
<othername>{middlename}</othername>
<surname>{lastname}</surname>
<email>{email}</email>
{authored#}</author>
<authorinitials>{authorinitials}</authorinitials>
<revhistory><revision>{revnumber?<revnumber>{revnumber}</revnumber>}<date>{revdate}</date>{authorinitials?<authorinitials>{authorinitials}</authorinitials>}{revremark?<revremark>{revremark}</revremark>}</revision></revhistory>
{docinfo1,docinfo2#}{include:{docdir}/docinfo.xml}
{docinfo,docinfo2#}{include:{docdir}/{docname}-docinfo.xml}
<orgname>{orgname}</orgname>

endif::basebackend-docbook[]
