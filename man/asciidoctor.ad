asciidoctor(1)
==============
:doctype: manpage
:awestruct-layout: base


NAME
----
asciidoctor - converts an AsciiDoc source file to HTML, DocBook and other formats


SYNOPSIS
--------
*asciidoctor* ['OPTION']... 'FILE'


DESCRIPTION
-----------
The asciidoctor(1) command converts the AsciiDoc source file 'FILE' to HTML 5,
DocBook 4.5 and other output formats.

If 'FILE' is '-' then the AsciiDoc source is read from standard input.


OPTIONS
-------

Security Settings
~~~~~~~~~~~~~~~~~

*-B, --base-dir*='DIR'::
    Base directory containing the document and resources. Defaults to the
    directory containing the source file, or the working directory if the
    source is read from a stream. Can be used as a way to chroot the execution
    of the program.

*-S, --safe-mode*='SAFE_MODE'::
    Set safe mode level: 'unsafe', 'safe', 'server' or 'secure'. Disables
    potentially dangerous macros in source files, such as include::[]. If not
    set, the safe mode level defaults to 'unsafe' when Asciidoctor is invoked
    using this script.

*--safe*::
    Set safe mode level to 'safe'. Enables include macros, but restricts access
    to ancestor paths of source file. Provided for compatibility with the
    asciidoc command. If not set, the safe mode level defaults to 'unsafe' when
    Asciidoctor is invoked using this script.

Document Settings
~~~~~~~~~~~~~~~~~

*-a, --attribute*='ATTRIBUTE'::
    Define, override or delete a document attribute. Command-line attributes
    take precedence over attributes defined in the source file.
+
'ATTRIBUTE' is normally formatted as a key-value pair, in the form 'NAME=VALUE'.
Alternate acceptable forms are 'NAME' (where the 'VALUE' defaults to an empty
string), 'NAME!' (unassigns the 'NAME' attribute) and 'NAME=VALUE@' (where
'VALUE' does not override value of 'NAME' attribute if it's already defined in
the source document). Values containing spaces should be enclosed in quotes.
+
This option may be specified more than once. 

*-b, --backend*='BACKEND'::
    Backend output file format: 'docbook45' or 'html5' supported out of the box.  
    You can also use the backend alias names 'html' (aliased to 'html5') or 
    'docbook' (aliased to 'docbook45'). Defaults to 'html5'. Other options can
    be passed, but if Asciidoctor cannot find the backend, it will fail during
    rendering.

*-d, --doctype*='DOCTYPE'::
    Document type: 'article', 'book' or 'inline'. Sets the root element when
    using the 'docbook' backend and the style class on the HTML body element
    when using the 'html' backend. The 'book' document type allows multiple
    level-0 section titles in a single document. The 'inline' document type
    allows the content of a single paragraph to be formatted and returned
    without wrapping it in a containing element. Defaults to 'article'.

Rendering Control
~~~~~~~~~~~~~~~~~

*-C, --compact*::
    Compact the output by removing blank lines. Not enabled by default.

*-D, --destination-dir*='DIR'::
    Destination output directory. Defaults to the directory containing the
    source file, or the working directory if the source is read from a stream.
    If specified, the directory is resolved relative to the working directory.

*-E, --template-engine*='NAME'::
    Template engine to use for the custom render templates. The gem with the
    same name as the engine will be loaded automatically. This name is also
    used to build the full path to the custom templates.

*-e, --eruby*::
    Specifies the eRuby implementation to use for rendering the built-in
    templates. Supported values are 'erb' and 'erubis'. Defaults to 'erb'.

*-n, --section-numbers*::
    Auto-number section titles. Synonym for *--attribute numbered*.

*-o, --out-file*='OUT_FILE'::
    Write output to file 'OUT_FILE'. Defaults to the base name of the input
    file suffixed with 'backend' extension. If the input is read from standard
    input, then the output file defaults to stdout. If 'OUT_FILE' is '-' then
    the standard output is also used. If specified, the file is resolved
    relative to the working directory.

*-s, --no-header-footer*::
    Suppress the document header and footer in the output.

*-T, --template-dir*='DIR'::
    A directory containing custom render templates that override one or more
    templates from the built-in set. (requires 'tilt' gem)
+
If there is a subfolder that matches the engine name (if specified), that folder
is appended to the template directory path. Similarly, if there is a subfolder
in the resulting template directory that matches the name of the backend, that
folder is appended to the template directory path.
+
This option may be specified more than once. Matching templates found in
subsequent directories override ones previously discovered.

Processing Information
~~~~~~~~~~~~~~~~~~~~~~

*--trace*::
    Include backtrace information on errors. Not enabled by default.

*-v, --verbose*::
    Verbosely print processing information and configuration file checks to
    stderr.

Program Information
~~~~~~~~~~~~~~~~~~~

*-h, --help*::
    Show the help message.

*-V, --version*::
    Print program version number.


EXIT STATUS
-----------
*0*::
    Success

*1*::
    Failure (syntax or usage error; configuration error; document processing
    failure; unexpected error).


BUGS
----
See the *Asciidoctor* issue tracker: <**https://github.com/asciidoctor/asciidoctor/issues?state=open**>


AUTHORS
-------
*Asciidoctor* was written by Dan Allen, Ryan Waldron, Jason Porter, Nick
Hengeveld and other contributors.

*AsciiDoc* was written by Stuart Rackham and has received contributions from
many other individuals.


RESOURCES
---------
Git source repository on GitHub: <**https://github.com/asciidoctor/asciidoctor**>

Project web site: <**http://asciidoctor.org**>

GitHub organization: <**http://github.com/asciidoctor**>

Mailinglist / forum: <**http://discuss.asciidoctor.org**>


COPYING
-------
Copyright \(C) 2012-2013 Dan Allen and Ryan Waldron. Free use of this
software is granted under the terms of the MIT License.

// vim: tw=80
